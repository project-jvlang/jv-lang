package patterns;

public record Triple(int a, int b);

public record Wrapper2(Triple triple, int constant);

public class Example27 {
    public static int compute(Wrapper2 wrapper) {
        return // strategy=Switch arms=2 guards=0 default=true exhaustive=true
        new Object() {
            int matchExpr() {
                final var __subject = wrapper;
                final int __matchResult;
                boolean __matched = false;
                if (!__matched) {
                    do {
                        if (!(__subject instanceof Wrapper2(Triple(var a, var b), var constant) w)) {
                            break;
                        }
                        __matched = true;
                        __matchResult = a * b + constant;
                        break;
                    } while (false);
                }
                if (!__matched) {
                    __matchResult = wrapper.constant();
                    __matched = true;
                }
                return __matchResult;
            }
        }.matchExpr()
        ;
    }
    
}
