package patterns;

public record Node(int left, int right);

public record Tree(Node node, int bonus);

public class Example24 {
    public static int sum(Tree tree) {
        return // strategy=Switch arms=2 guards=0 default=true exhaustive=true
        new Object() {
            int matchExpr() {
                final var __subject = tree;
                final int __matchResult;
                boolean __matched = false;
                if (!__matched) {
                    do {
                        if (!(__subject instanceof Tree(Node(var left, var right), var bonus) t)) {
                            break;
                        }
                        __matched = true;
                        __matchResult = left + right + bonus;
                        break;
                    } while (false);
                }
                if (!__matched) {
                    __matchResult = tree.bonus();
                    __matched = true;
                }
                return __matchResult;
            }
        }.matchExpr()
        ;
    }
    
}
