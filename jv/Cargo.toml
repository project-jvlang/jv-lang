[workspace]
resolver = "2"
members = [
    "crates/jv_lexer",
    "crates/jv_parser", 
    "crates/jv_ast",
    "crates/jv_ir",
    "crates/jv_codegen_java",
    "crates/jv_mapper",
    "crates/jv_checker",
    "crates/jv_fmt",
    "crates/jv_pm",
    "crates/jv_build",
    "crates/jv_lsp",
    "crates/jv_cli",
]

[workspace.package]
version = "0.1.0"
edition = "2021"
license = "MIT OR Apache-2.0"
authors = ["jv Language Team"]
repository = "https://github.com/project-jvlang/jv-lang"

[workspace.dependencies]
# Parser framework
chumsky = "0.9"

# CLI framework
clap = { version = "4.0", features = ["derive", "env"] }
anyhow = "1.0"
indicatif = "0.17"

# LSP framework  
tower-lsp = "0.20"
tokio = { version = "1.0", features = ["full"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
toml = "0.8"
chrono = { version = "0.4", features = ["serde"] }

# Testing
test-case = "3.0"
proptest = "1.0"

# Utilities
thiserror = "1.0"
tracing = "0.1"
tracing-subscriber = "0.3"

# Internal crates
jv_lexer = { path = "crates/jv_lexer" }
jv_parser = { path = "crates/jv_parser" }
jv_ast = { path = "crates/jv_ast" }
jv_ir = { path = "crates/jv_ir" }
jv_codegen_java = { path = "crates/jv_codegen_java" }
jv_mapper = { path = "crates/jv_mapper" }
jv_checker = { path = "crates/jv_checker" }
jv_fmt = { path = "crates/jv_fmt" }
jv_pm = { path = "crates/jv_pm" }
jv_build = { path = "crates/jv_build" }
jv_lsp = { path = "crates/jv_lsp" }
jv_cli = { path = "crates/jv_cli" }

[profile.dev]
# Reduce debug info to save disk space
debug = 1
# Use fewer optimization passes to reduce build time and disk usage
opt-level = 0
# Reduce parallel codegen units to save disk space (at cost of build time)
codegen-units = 256
# Enable LTO for smaller binaries
lto = "thin"
# Enable incremental compilation for faster rebuilds
incremental = true

[profile.release]
# Full debug info for production builds
debug = false
# Enable all optimizations
opt-level = 3
# Use fewer codegen units for better optimization
codegen-units = 1
# Enable full LTO for smallest binary size
lto = "fat"
# Strip symbols to reduce binary size
strip = true
# Enable panic=abort for smaller binary size
panic = "abort"

# Optimize dependencies even in dev builds
[profile.dev.package."*"]
opt-level = 1

# Optimize build dependencies
[profile.dev.build-override]
opt-level = 1
