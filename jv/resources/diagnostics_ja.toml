[generic.conflicting_argument]
message = "{symbol} の型パラメータ T{type_param} に複数の候補が推論されました: 既存 {previous} と新規 {candidate} が競合しています。型注釈を追加して曖昧さを解消してください。"
note_existing = "既存の割り当ては {existing_span} に記録されています。"
note_explain = "--explain JV2001 で詳細な制約内訳を表示できます。"

[generic.bound_violation]
message = "{symbol} の型パラメータ T{type_param} は {predicate} を満たす必要がありますが、推論された型では条件を満たせません。"
note_hint = "必要なインターフェース/トレイトを実装するか、型引数を変更してください。"
note_explain = "--explain JV2002 で不足している限定条件の確認方法を参照できます。"

[generic.unresolved_parameter]
message = "{symbol} の型パラメータ T{type_param} を解決できませんでした。{requirement}"
note_hint = "型推論を補助するために明示的な型引数または境界を追加してください。"
note_explain = "--explain JV2001 で詳細ガイドを確認できます。"

[generic.capability_not_found]
message = "{symbol} の型パラメータ T{type_param} に要求された能力 {capability} の実装が見つかりませんでした。"
note_hint = "impl {capability}<{target}> { ... } を追加するか、依存パッケージを確認してください。"
note_preferred = "指定された優先実装 {preferred_impl} も見つかりませんでした。"

[generic.capability_ambiguous]
message = "{symbol} の型パラメータ T{type_param} に対する能力 {capability} の実装候補が複数存在します: {candidates}。"
note_hint = "preferredImpl または明示的な型注釈で使用する実装を指定してください。"

[generic.kind_mismatch]
message = "{symbol} の型パラメータ {type_param} は kind {expected} を要求しますが、提供された引数は {actual} でした。"
note_span = "型引数は {span} で指定されています。"
note_hint = "kind 注釈または部分適用のスロット数を確認してください。"

[imports.diagnostic.unknown]
message = "import `{path}` は既知のシンボルに一致しません。"
message_with_candidates = "import `{path}` は既知のシンボルに一致しません。近い候補:\n{candidates}"
suggestion = "`import {candidate}` を使用"

[imports.diagnostic.ambiguous]
message = "import `{path}` は複数のシンボルに一致します。"
message_with_candidates = "import `{path}` は複数のシンボルに一致します。明示的に選択してください:\n{candidates}"
suggestion = "`import {candidate}` または `import {candidate} as ...` を使用"
generic_suggestion = "`as` で別名を付けて曖昧さを解消"

[imports.diagnostic.missing_module]
message = "モジュール `{module}` がモジュールグラフに存在しないため `{required_by}` を解決できません。"
suggestion = "`--add-modules {module}` を指定するか jv.toml の build.modules に追加してください。"

[imports.plan]
header = "解決済み import 一覧"
header_none = "解決済み import はありません"

[imports.plan.type]
summary = "型 import: {fqcn}"

[imports.plan.package]
summary = "パッケージ import: {name}.*"

[imports.plan.static]
summary = "静的 import: {owner}.{member}"

[imports.plan.module]
summary = "モジュール import: {name}"

[imports.plan.alias]
summary = "別名: {alias}"

[imports.plan.module_dependency]
summary = "モジュール依存: {module}"

[raw_string.unterminated]
message = "JV4300: 生文字列リテラルが閉じられていません。対応する閉じクォート（' または '''）を追加してください。"
note_hint = "三重シングルクォートの場合は開きと同じだけの ''' を末尾に記述します。"

[raw_string.ambiguous_char]
message = "JV4301: 1文字リテラルの型が曖昧です。Char か String かを型注釈や補助メソッドで明示してください。"
note_hint = "String として扱いたい場合は \"a\" や .toString() を使用し、Char として扱う場合は Char 型注釈を追加します。"
