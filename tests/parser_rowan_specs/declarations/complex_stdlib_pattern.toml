description = "Auto-generated expectation for jv/tests/fixtures/package/complex_stdlib_pattern.jv"
source = "jv/tests/fixtures/package/complex_stdlib_pattern.jv"

[expect]
statement_count = 9

[expect.parser_diagnostics]
allowed = false
max = 0

[expect.lowering_diagnostics]
allowed = false
max = 0

[[expect.statements]]
index = 0
kind = "package"
name = "jv.test.collections"

[expect.statements.span]
start_line = 1
start_column = 1
end_line = 1
end_column = 28

[[expect.statements]]
index = 1
kind = "data_class_declaration"
name = "CollectionWrapper"

[expect.statements.span]
start_line = 6
start_column = 1
end_line = 6
end_column = 23

[[expect.statements]]
index = 2
kind = "expression"

[expect.statements.span]
start_line = 6
start_column = 23
end_line = 6
end_column = 41

[[expect.statements]]
index = 3
kind = "expression"

[expect.statements.span]
start_line = 11
start_column = 1
end_line = 19
end_column = 2

[[expect.statements]]
index = 4
kind = "function_declaration"
name = "createSingletonWrapper"

[expect.statements.span]
start_line = 24
start_column = 1
end_line = 28
end_column = 2

[expect.statements.block]
statement_kinds = [
    "val_declaration",
    "expression",
    "return_statement",
]

[[expect.statements]]
index = 5
kind = "extension_function"
name = "size"

[expect.statements.span]
start_line = 33
start_column = 1
end_line = 35
end_column = 2

[[expect.statements]]
index = 6
kind = "extension_function"
name = "isEmpty"

[expect.statements.span]
start_line = 40
start_column = 1
end_line = 42
end_column = 2

[[expect.statements]]
index = 7
kind = "extension_function"
name = "mapToWrapper"

[expect.statements.span]
start_line = 47
start_column = 1
end_line = 53
end_column = 2

[[expect.statements]]
index = 8
kind = "function_declaration"
name = "demonstrateUsage"

[expect.statements.span]
start_line = 58
start_column = 1
end_line = 65
end_column = 2

[expect.statements.block]
statement_kinds = [
    "val_declaration",
    "val_declaration",
    "val_declaration",
    "val_declaration",
    "return_statement",
    "expression",
    "expression",
]
